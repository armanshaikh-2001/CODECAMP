# -*- coding: utf-8 -*-
"""DEMOGRAPHIC_DATA_ANALYZER.pynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hMmO6z8RULvlzYiP3ldU3qGwdLvur_Z5
"""

import pandas as pd

def demographic_data_analysis():
    # Read data from file
    df = pd.read_csv('/content/adult.csv')

    # How many of each race are represented in this dataset?
    race_count = df['race'].value_counts()

    # What is the average age of men?
    average_age_men = round(df[df['sex'] == 'Male']['age'].mean(), 1)

    # What is the percentage of people who have a Bachelor's degree?
    percentage_bachelors = round((df[df['education'] == 'Bachelors'].shape[0] / df.shape[0]) * 100, 1)

    # What percentage of people with advanced education (Bachelors, Masters, or Doctorate) make more than 50K?
    advanced_education = df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])
    high_income = df['income'] == '>50K'

    higher_edu_rich = round((df[advanced_education & high_income].shape[0] / df[advanced_education].shape[0]) * 100, 1)

    # What percentage of people without advanced education make more than 50K?
    lower_education = ~advanced_education
    lower_edu_rich = round((df[lower_education & high_income].shape[0] / df[lower_education].shape[0]) * 100, 1)

    # What is the minimum number of hours a person works per week?
    min_work_hours = df['hours.per.week'].min()

    # What percentage of the people who work the minimum number of hours per week have a salary of more than 50K?
    min_workers = df[df['hours.per.week'] == min_work_hours]
    rich_min_workers = round((min_workers[min_workers['income'] == '>50K'].shape[0] / min_workers.shape[0]) * 100, 1)

    # What country has the highest percentage of people that earn >50K and what is that percentage?
    country_income_percentage = (df[high_income].groupby('native.country').size() / df.groupby('native.country').size()) * 100
    highest_earning_country = country_income_percentage.idxmax()
    highest_earning_country_percentage = round(country_income_percentage.max(), 1)

    # Identify the most popular occupation for those who earn >50K in India.
    india_high_income = df[(df['native.country'] == 'India') & (df['income'] == '>50K')]
    top_IN_occupation = india_high_income['occupation'].value_counts().idxmax()

    # Returning results in a dictionary
    return {
        'race_count': race_count,
        'average_age_men': average_age_men,
        'percentage_bachelors': percentage_bachelors,
        'higher_education_rich': higher_edu_rich,
        'lower_education_rich': lower_edu_rich,
        'min_work_hours': min_work_hours,
        'rich_percentage_min_workers': rich_min_workers,
        'highest_earning_country': highest_earning_country,
        'highest_earning_country_percentage': highest_earning_country_percentage,
        'top_IN_occupation': top_IN_occupation
    }

# Call the function to test
if __name__ == "__main__":
    results = demographic_data_analysis()
    for key, value in results.items():
        print(f"{key}: {value}")